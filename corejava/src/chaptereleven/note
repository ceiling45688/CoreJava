异常：如果每个方法不能够采用正常的途径完成任务，就可以通过另外一个路径退出方法。在这种情况下，方法并不返回任何值，
而是throw一个封装了错误信息的对象。此外，这个方法会立刻退出，并不返回任何值，调用这个方法的代码也无法继续执行。
1.java异常层次结构：
    Throwable ->Error (运行时系统的内部错误和资源耗尽错误，不抛出)
              ->Exception  -> IOException（I/O等其他异常）,RuntimeException（运行时异常，由程序错误导致）
             RuntimeException包括错误的类型转换、数组访问越界、访问空指针
             IOException包括试图在文件尾部后面读取数据、试图打开一个错误格式的URL、查找不存在的class
ps:java语言规范将派生与Error类或RuntimeException类的所有异常称为未检查（unchecked）异常，其他为已检查（checked）异常。
2.异常处理过程：
1).捕获异常：使用 try 和 catch 关键字可以捕获异常。try/catch 代码块放在异常可能发生的地方。
Catch 语句包含要捕获异常类型的声明。当保护代码块中发生一个异常时，try 后面的 catch 块就会被检查。
2).声明异常：如果一个方法没有捕获到一个检查性异常，那么该方法必须使用 throws 关键字来声明。在方法首部声明所有可能抛出的异常。
也可以使用 throw 关键字抛出一个异常，无论它是新实例化的还是刚捕获到的。
4种情况应该抛出异常：1.调用一个抛出已检查异常的方法，
                    2.程序运行过程中发现错误，并且利用throw语句抛出一个已检查异常
                    3.程序出现错误，例如数组下标越界异常 a[-1]=0
                    4.java虚拟机和运行时库出现的内部异常
前两种必须先声明可能抛出的异常，但是不需要声明ERROR，RuntimeException.